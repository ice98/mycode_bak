/* !@IceNode.h
********************************************************************************
模块名		: 
文件名		: IceNode.h
相关文件	: IceNode.cpp
文件描述	:
作者		: Icy
版本		: 1.0
--------------------------------------------------------------------------------
备注		: 
--------------------------------------------------------------------------------
修改记录 : 
日  期          版本            修改人          修改内容 
2008/03/15      1.0             Icy				创建
********************************************************************************
* 版权所有(c) 2008, 2015, Icy, 保留所有权利
================================================================================
 
*******************************************************************************/
#ifndef _ICE_NODE_H
#define _ICE_NODE_H

#include "ice.h"

template <typename T>
class CIcyNode
{
public:
/////////////////////////////////////////////////////////////////////// 类型定义
	typedef list<CIcyNode<T>*> ChildList;
	typedef list<CIcyNode<T>*>::iterator NODE_ITERATOR;
public:
///////////////////////////////////////////////////////////// 构造、析构、初始化
	CIcyNode(T value, CIcyNode<T> *pParent = NULL);
	virtual ~CIcyNode();
public:
///////////////////////////////////////////////////////////////////////// 虚函数

public:
/////////////////////////////////////////////////////////////////////// 公用方法
	//void SetNodeGrade(UCHAR grade);
	void ApendChild(CIcyNode<T> *pNode);
	void AddChild(CIcyNode<T> *pNode, DWORD pos);
	void DelChild(CIcyNode<T> *pNode, DWORD pos);
	CIcyNode<T>* GetChild(DWORD pos) ;
	DWORD GetChildCount() const;
	T GetNodeValue() const;
public:
/////////////////////////////////////////////////////////////////////// 静态方法
	//static void ClearNode(CIcyNode *pNode);

protected:
/////////////////////////////////////////////////////////////////////// 内部方法

private:
/////////////////////////////////////////////////////////////////// 私有类型定义

private:
/////////////////////////////////////////////////////////////////////// 私有方法
	void ClearNode();
private:
/////////////////////////////////////////////////////////////////////////// 属性
	// 等级，根节点为1
	UCHAR m_ucGrade;
	// 父节点，m_ucGrade=1 时，为Null.
	CIcyNode<T> *m_pParent;
	// 左、右兄弟，边缘节点为NULL
	// 	CIcyNode *m_pBrotherLeft;
	// 	CIcyNode *m_pBrotherRight;
	// 孩子数
	DWORD m_dwChildCnt;
	// 孩子列表
	ChildList m_lChildList;
	T m_nodeValue;

private:
/////////////////////////////////////////////////////////////////////// 静态属性

private:
///////////////////////////////////////////////////////////////////// 禁用的方法

};

/* !@IceNode.cpp
********************************************************************************
模块名		: 
文件名		: IceNode.cpp
相关文件	: IceNode.h
文件描述	: 实现文件
作者		: Icy
版本		: 1.0
--------------------------------------------------------------------------------
备注		: 
--------------------------------------------------------------------------------
修改记录 : 
日  期          版本            修改人          修改内容 
2008/03/15      1.0             Icy				创建
********************************************************************************
* 版权所有(c) 2008, 2015, Icy, 保留所有权利
================================================================================
 
********************************************************************************/
//#include "IceNode.h"
/////////////////////////////////////////////////////////////////////////////////


#endif